name: Automation Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  api-automation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1.7.2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Execute API Tests
        run: ./gradlew apiTest

      - name: Archive API Test Report
        uses: actions/upload-artifact@v4.3.6
        with:
          name: api-test-report
          path: build/test-results/apiTest/test-report.html
          if-no-files-found: warn
          retention-days: 30
          compression-level: 6
          overwrite: true

  web-automation:
    runs-on: ubuntu-latest
    needs: api-automation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1.7.2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Execute Web Tests
        run: ./gradlew webTest

      - name: Archive Web Test Report
        uses: actions/upload-artifact@v4.3.6
        with:
          name: web-test-report
          path: build/test-results/webTest/test-report.html
          if-no-files-found: warn
          retention-days: 30
          compression-level: 6
          overwrite: true

  deploy:
    runs-on: ubuntu-latest
    needs: [api-automation, web-automation]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'

      - name: Prepare report directory
        run: |
          mkdir -p report/apiTest
          mkdir -p report/webTest
          cp build/test-results/apiTest/test-report.html report/apiTest/
          cp build/test-results/webTest/test-report.html report/webTest/

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report
          publish_branch: gh-pages
